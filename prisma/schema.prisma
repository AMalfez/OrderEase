generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Restaurant {
  id                String     @id @default(auto()) @map("_id") @db.ObjectId
  restaurant_name   String
  tables            Boolean[] //index shows table no. , value shows whether its empty or not
  table_assigned_to String[] //contains ids of customers on diff. table numbers
  opening_time      DateTime
  closing_time      DateTime
  isOpen            Boolean
  rating            String
  restaurant_image  String
  Menu              Item[]
  Feedbacks         Feedback[]
  Orders            Order[]
}

model User {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  email         String
  userId        String     @unique
  profile_photo String
  name          String
  password      String     @unique
  role          String     @default("customer")
  restaurantId  String     @default("") @db.ObjectId
  Feedbacks     Feedback[]
  Orders        Order[]
}

model Feedback {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  User         User       @relation(fields: [userId], references: [id])
  Restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  userId       String     @default("") @db.ObjectId
  restaurantId String     @default("") @db.ObjectId
}

model Item {
  id                   String     @id @default(auto()) @map("_id") @db.ObjectId
  image                String
  Restaurant           Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId         String     @default("") @db.ObjectId
  name                 String
  category             String
  price                String
  quantity_per_price   String
  available_quantities String
  Orders               Order[]    @relation(fields: [OrderIds], references: [id])
  OrderIds             String[]   @db.ObjectId
}

model Order {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  Items        Item[]     @relation(fields: [ItemsIds], references: [id])
  ItemsIds     String[]   @db.ObjectId
  Restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId String     @default("") @db.ObjectId
  quantity     String
  total_amount String
  User         User       @relation(fields: [userId], references: [id])
  userId       String     @db.ObjectId
}
