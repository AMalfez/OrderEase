generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Restaurant {
  id               String     @id @default(auto()) @map("_id") @db.ObjectId
  ownerId          String     @unique
  restaurant_name  String     @unique
  tables           Boolean[] //index shows table no. , value shows whether its empty or not
  opening_time     String
  address          String
  closing_time     String
  isOpen           Boolean    @default(false)
  rating           String     @default("3.5")
  restaurant_image String
  Menu             Item[]
  Feedbacks        Feedback[]
  Orders           Order[]
}

model User {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  userId        String     @unique
  email         String
  profile_photo String
  name          String
  role          String     @default("customer")
  onboarded     Boolean    @default(false)
  restaurantId  String     @default("")
  Feedbacks     Feedback[]
  Orders        Order[]
}

model Feedback {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  User         User       @relation(fields: [userId], references: [id])
  Restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  userId       String     @default("") @db.ObjectId
  restaurantId String     @default("") @db.ObjectId
  feedback     String
  user_name    String
  user_image   String?
}

model Testimonial {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  restaurantId String
  testimonial  String
  user_name    String
}

model Item {
  id                   String     @id @default(auto()) @map("_id") @db.ObjectId
  image                String
  Restaurant           Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId         String     @default("") @db.ObjectId
  name                 String
  category             String
  price                String
  quantity_per_price   String
  available_quantities String[]
  Orders               Order[]    
}

model Order {
  id             String     @id @default(auto()) @map("_id") @db.ObjectId
  Item           Item     @relation(fields: [ItemsId], references: [id])
  ItemsId        String   @db.ObjectId
  Restaurant     Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId   String     @default("") @db.ObjectId
  Table_no       String
  Date           DateTime   @default(now())
  total_amount   String
  User           User  @relation(fields: [userId], references: [userId])
  userId         String     
  quantity       String
  isOrderPlaced  Boolean    @default(false)
  status         String     
}


